# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import balanceador_pb2 as balanceador__pb2


class BalanceoStub(object):
    """definición del servicio para mensajes de audio
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.recibirOrden = channel.unary_unary(
                '/balanceoRPC.Balanceo/recibirOrden',
                request_serializer=balanceador__pb2.peticion.SerializeToString,
                response_deserializer=balanceador__pb2.respuesta.FromString,
                )


class BalanceoServicer(object):
    """definición del servicio para mensajes de audio
    """

    def recibirOrden(self, request, context):
        """solicita
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BalanceoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'recibirOrden': grpc.unary_unary_rpc_method_handler(
                    servicer.recibirOrden,
                    request_deserializer=balanceador__pb2.peticion.FromString,
                    response_serializer=balanceador__pb2.respuesta.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'balanceoRPC.Balanceo', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Balanceo(object):
    """definición del servicio para mensajes de audio
    """

    @staticmethod
    def recibirOrden(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/balanceoRPC.Balanceo/recibirOrden',
            balanceador__pb2.peticion.SerializeToString,
            balanceador__pb2.respuesta.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
